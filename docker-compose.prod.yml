version: '3.8'

services:
  postgres:
    container_name: boom-postgres-prod
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=boom
      - POSTGRES_PASSWORD=${DB_PASSWORD:-boom_prod_password_change_me}
      - POSTGRES_DB=boom_prod
    volumes:
      - postgres-prod-data:/var/lib/postgresql/data
    networks:
      - boom-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U boom"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  backend:
    container_name: boom-backend-prod
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=boom
      - DB_PASSWORD=${DB_PASSWORD:-boom_prod_password_change_me}
      - DB_DATABASE=boom_prod
    networks:
      - boom-network
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    # Health check to ensure the service is running
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Resource limits (optional but recommended for production)
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  frontend:
    container_name: boom-frontend-prod
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile.prod
    ports:
      - "80:80"
    networks:
      - boom-network
    restart: always
    depends_on:
      - backend
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

volumes:
  postgres-prod-data:

networks:
  boom-network:
    driver: bridge
